syntax = "proto3";

package cict.service_course.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-reporter/cict/service_course/v1;service_course";
option java_multiple_files = false;
option java_outer_classname = "CourseFieldProto";
option java_package = "com.github.cictapis.cict_reporter.cict.servicecourse.v1";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/paginate.proto";
import "cict/service-course/v1/course.proto";

service CourseFieldService {
  rpc MutateCourseField(MutateCourseFieldRequest) returns (MutateCourseFieldResponse) {
    option (google.api.http) = {
      post: "/api/service_course/v1/course_field/mutate",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: ADMIN,
    };
  }

  rpc GetCourseField(GetCourseFieldRequest) returns (GetCourseFieldResponse) {
    option (google.api.http) = {
      get: "/api/service_course/v1/course_field/get",
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
    };
  }

  rpc ListCourseField(ListCourseFieldRequest) returns (ListCourseFieldResponse) {
    option (google.api.http) = {
      get: "/api/service_course/v1/course_field/list"
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
    };
  }
}

message MutateCourseFieldRequest {
  google.protobuf.FieldMask update_mask = 4;

  oneof operation {
    Course create = 1;

    Course update = 2;

    Course delete = 3;
  }
}

message MutateCourseFieldResponse {
  string mutated_id = 1;

  string msg = 2;
}

message GetCourseFieldRequest {
  string id = 1;
}

message GetCourseFieldResponse {
  CourseField course_field = 1;
}

message ListCourseFieldRequest {
  common.v1.Paginate paginate = 1;
}

message ListCourseFieldResponse {
  repeated CourseField course_fields = 1;
}

message CourseField {
  // @gotags: gorm:"primary_key;type:varchar(36);default:(uuid())"
  string id = 1;

  // @gotags: gorm:"<-"
  string name = 2;

  // Has many relationships with Course
  repeated Course courses = 3;

  // @gotags: gorm:"autoUpdateTime:nano"
  int64 updated_at = 4;

  // @gotags: gorm:"autoCreateTime:nano"
  int64 created_at = 5;

  // @gotags: json:"created_by_id"
  string created_by_id = 6;

  // @gotags: json:"updated_by_id"
  string updated_by_id = 7;

  // @gotags: json:"owned_by_id"
  string owned_by_id = 8;
}
