syntax = "proto3";

package cict.service_course.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_course/v1;service_course";
option java_multiple_files = true;
option java_outer_classname = "ExamScoreProto";
option java_package = "com.github.cictapis.cict_auth.cict.service_course.v1";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/paginate.proto";

service ExamScoreService {
  rpc MutateExamScore(MutateExamScoreRequest) returns (MutateExamScoreResponse) {
    option (google.api.http) = {
      post: "/api/service_course/v1/exam_score/mutate",
      body: "*",
    };
    option (common.v1.cict) = {
      crud_policy: ADMIN,
    };
  }

  rpc GetExamScore(GetExamScoreRequest) returns (GetExamScoreResponse) {
    option (google.api.http) = {
      get: "/api/service_course/v1/exam_score/get",
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
      system_api_exporter: CICT_SERVICE_COURSE_EXAM_SCORE_GET_EXAM_SCORE,
    };
  }

  rpc ListExamScore(ListExamScoreRequest) returns (ListExamScoreResponse) {
    option (google.api.http) = {
      get: "/api/service_course/v1/exam_score/list"
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
      system_api_exporter: CICT_SERVICE_COURSE_EXAM_SCORE_LIST_EXAM_SCORE,
    };
  }
}

message MutateExamScoreRequest {
  google.protobuf.FieldMask update_mask = 4;

  oneof operation {
    ExamScore create = 1;

    ExamScore update = 2;

    ExamScore delete = 3;
  }
}

message MutateExamScoreResponse {
  uint64 mutated_id = 1;
}

message GetExamScoreRequest {
  uint64 id = 1;
}

message GetExamScoreResponse {
  ExamScore exam_score = 1;
}

message ListExamScoreRequest {
  cict.common.v1.Paginate paginate = 1;
}

message ListExamScoreResponse {
  repeated ExamScore exam_scores = 1;
}

message ExamScore {  
  // @gotags: gorm:"primaryKey"
  uint64 id = 1;

  // @gotags: gorm:"<-"
  float score = 2;

  // Belong to relationship ExamSchedule
  uint64 exam_schedule_id = 3;

  // Belong to relationship User
  uint64 user_id = 4;

  // @gotags: gorm:"autoUpdateTime:nano"
  int64 updated_at = 5;

  // @gotags: gorm:"autoCreateTime:nano"
  int64 created_at = 6;
}
