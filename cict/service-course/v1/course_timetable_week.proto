syntax = "proto3";

package cict.service_course.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_course/v1;service_course";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/paginate.proto";
import "cict/service-course/v1/course_timetable_day.proto";

service CourseTimetableWeekService {
  rpc MutateCourseTimetableWeek(MutateCourseTimetableWeekRequest) returns (MutateCourseTimetableWeekResponse) {
    option (google.api.http) = {
      post: "/api/service_course/v1/course_timetable_week/mutate",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: ADMIN,
    };
  }

  rpc GetCourseTimetableWeek(GetCourseTimetableWeekRequest) returns (GetCourseTimetableWeekResponse) {
    option (google.api.http) = {
      get: "/api/service_course/v1/course_timetable_week/get"
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
    };
  }

  rpc ListCourseTimetableWeek(ListCourseTimetableWeekRequest) returns (ListCourseTimetableWeekResponse) {
    option (google.api.http) = {
      get: "/api/service_course/v1/course_timetable_week/list"
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
    };
  }
}

message MutateCourseTimetableWeekRequest {
  google.protobuf.FieldMask update_mask = 4;

  oneof operation {
    CourseTimetableWeek create = 1;

    CourseTimetableWeek update = 2;

    CourseTimetableWeek delete = 3;
  }
}

message MutateCourseTimetableWeekResponse {
  string mutated_id = 1;
}

message GetCourseTimetableWeekRequest {
  string id = 1;
}

message GetCourseTimetableWeekResponse {
  CourseTimetableWeek course_timetable_week = 1;
}

message ListCourseTimetableWeekRequest {
  cict.common.v1.Paginate paginate = 1;
}

message ListCourseTimetableWeekResponse {
  repeated CourseTimetableWeek course_timetable_weeks = 1;
}

message CourseTimetableWeek {
  // @gotags: gorm:"primary_key;type:varchar(16);default:uuid()"
  string id = 1;

  // Belong to relationship
  string course_id = 2;

  // @gotags: gorm:"<-"
  uint32 week = 3;

  // @gotags: gorm:"<-"
  bool active = 4;

  // HasMany relationship CourseTimetableDay
  repeated CourseTimetableDay course_timetable_days = 5;

  // @gotags: gorm:"autoUpdateTime:nano"
  int64 updated_at = 6;

  // @gotags: gorm:"autoCreateTime:nano"
  int64 created_at = 7;
}
