syntax = "proto3";

package cict.service_mail.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_mail/v1;service_mail";
option java_multiple_files = false;
option java_outer_classname = "MailProto";
option java_package = "com.github.cictapis.cict_reporter.cict.servicemail.v1";

import "google/api/annotations.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/enum_rpc_handle_status.proto";
import "cict/service-mail/v1/enum_built_in_template.proto";

service MailService {
  // Send email with user's input content
  rpc SendContentMail(SendContentMailRequest) returns (SendContentMailResponse) {
    option (google.api.http) = {
      post: "/api/service_mail/v1/mail/send_content",
      body: "*",
    };
    option (common.v1.cict) = {
      crud_policy: AUTH,
    };
  }

  // Send email with prepared template
  rpc SendTemplateMail(SendTemplateMailRequest) returns (SendTemplateMailResponse) {
    option (google.api.http) = {
      post: "/api/service_mail/v1/mail/send_template",
      body: "*",
    };
    option (common.v1.cict) = {
      crud_policy: AUTH,
    };
  }
}

message SendContentMailRequest {
  repeated string dst_mail_address = 1;

  string subject = 2;

  string content = 3;

  repeated string attached_files = 4;
}

message SendContentMailResponse {
  common.v1.EnumRpcHandleStatus.RpcHandleStatus rpc_handle_status = 1;
}

message SendTemplateMailRequest {
  oneof by {
    SendTemplateMailByTemplateId template_id = 1;

    SendTemplateMailByBuiltInTemplate built_in_template = 2;
  }
}

message SendTemplateMailByTemplateId {
  repeated string dst_mail_address = 1;

  string template_id = 2;
}

message SendTemplateMailByBuiltInTemplate {
  repeated string dst_mail_address = 1;

  EnumBuiltInTemplate.BuiltInTemplate built_in_template = 3;
}

message SendTemplateMailResponse {
  common.v1.EnumRpcHandleStatus.RpcHandleStatus rpc_handle_status = 1;
}
