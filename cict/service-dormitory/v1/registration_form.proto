syntax = "proto3";

package cict.service_dormitory.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_dormitory/v1;service_dormitory";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/paginate.proto";

service RegistrationFormService {
  rpc MutateRegistrationForm(MutateRegistrationFormRequest) returns (MutateRegistrationFormResponse) {
    option (google.api.http) = {
      post: "/api/service_dormitory/v1/registration_form/mutate",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: USER,
    };
  }

  rpc GetRegistrationForm(GetRegistrationFormRequest) returns (GetRegistrationFormResponse) {
    option (google.api.http) = {
      get: "/api/service_dormitory/v1/registration_form/get"
    };
    option (common.v1.cict) = {
      crud_policy: USER,
      system_api_exporter: CICT_SERVICE_DORMITORY_REGISTRATION_FORM_SERVICE_GET_REGISTRATION_FORM,
    };
  }

  rpc ListRegistrationForm(ListRegistrationFormRequest) returns (ListRegistrationFormResponse) {
    option (google.api.http) = {
      get: "/api/service_dormitory/v1/registration_form/list"
    };
    option (common.v1.cict) = {
      crud_policy: USER,
      system_api_exporter: CICT_SERVICE_DORMITORY_REGISTRATION_FORM_SERVICE_LIST_REGISTRATION_FORM,
    };
  }
}

message MutateRegistrationFormRequest {
  google.protobuf.FieldMask update_mask = 4;

  oneof operation {
    RegistrationForm create = 1;

    RegistrationForm update = 2;

    RegistrationForm delete = 3;
  }
}

message MutateRegistrationFormResponse {
  uint64 mutatedId = 1;
}

message GetRegistrationFormRequest {
  uint64 id = 1;
}

message GetRegistrationFormResponse {
  RegistrationForm registration_form = 1;
}

message ListRegistrationFormRequest {
  cict.common.v1.Paginate paginate = 1;
}

message ListRegistrationFormResponse {
  repeated RegistrationForm registration_forms = 1;
}

message RegistrationForm {
  // @gotags: gorm:"primaryKey"
  uint64 id = 1;

  // Belong to relationships
  uint64 user_id = 2;

  // @gotags: gorm:"autoUpdateTime:nano"
  int64 updated_at = 3;

  // @gotags: gorm:"autoCreateTime:nano"
  int64 created_at = 4;
}
