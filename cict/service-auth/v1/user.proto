syntax = "proto3";

package cict.service_auth.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_auth/v1;service_auth";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/enum_mutate_operation.proto";
import "cict/common/v1/enum_mask_behavior.proto";
import "cict/common/v1/paginate.proto";
import "cict/service-auth/v1/enum_authenticate_third_party.proto";
import "cict/service-auth/v1/enum_system_role.proto";
import "cict/service-auth/v1/enum_user_status.proto";

service UserService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/user/login",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: ANONYMOUS,
    };
  }

  rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/user/logout",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: AUTH,
    };
  }

  rpc MutateUser(MutateUserRequest) returns (MutateUserResponse) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/user/mutate",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: ADMIN,
    };
  }

  // owner
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/user/create",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: USER,
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/service_auth/v1/user/get"
    };
    option (common.v1.cict) = {
      crud_policy: USER,
      system_api_exporter: CICT_SERVICE_AUTH_USER_SERVICE_GET_USER,
    };
  }

  rpc ListUser(ListUserRequest) returns (ListUserResponse) {
    option (google.api.http) = {
      get: "/api/auth/v1/user/list"
    };
    option (common.v1.cict) = {
      crud_policy: ADMIN,
      system_api_exporter: CICT_SERVICE_AUTH_USER_SERVICE_LIST_USER,
    };
  }
}

message LoginRequest {
  string email = 1;

  string password = 2;

  string validate_password = 3;
}

message LoginResponse {
  User user = 1;

  string session_id = 2;
}

message MutateUserRequest {
  oneof operation {
    MutateUserCreate create = 1;

    MutateUserDelete delete = 2;
  }

  bool partial_failure = 4;
}

message MutateUserCreate {

  option (common.v1.default_mask) = {
    paths: ["authenticate_third_party","avatar","email","name","password","regis_username","user_status"]
  };

  repeated User users = 1;
}

message MutateUserDelete {
  repeated string ids = 1;
}

message MutateUserResponse {
  int64 affected_rows = 1;
}

message UpdateUserRequest {
  option (common.v1.default_mask) = {
    paths: ["authenticate_third_party","avatar","name","password","user_status"]
  };

  repeated string ids = 1;

  User user = 2;

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 3;

  google.protobuf.FieldMask mask = 4;

  bool partial_failure = 5;
}

message UpdateUserResponse {
  int64 updated_rows = 1;
}

message GetUserRequest {

  option (common.v1.default_mask) = {
    paths: ["id","authenticate_third_party","avatar","email","name","regis_username","user_status","updated_at","created_at","created_by_id","updated_by_id","owned_by_id"]
  };

  uint64 id = 1;

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 2;

  google.protobuf.FieldMask mask = 3;
}

message GetUserResponse {
  User user = 1;

  string msg = 2;
}

message ListUserRequest {

  option (common.v1.default_mask) = {
    paths: ["id","authenticate_third_party","avatar","email","name","regis_username","user_status","updated_at","created_at","created_by_id","updated_by_id","owned_by_id"]
  };

  common.v1.Paginate paginate = 1;

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 2;

  google.protobuf.FieldMask mask = 3;
}

message ListUserResponse {
  repeated User users = 1;
}

message User {
  // @gotags: gorm:"primary_key"
  uint64 id = 1;

  EnumAuthenticateThirdParty.AuthenticateThirdParty authenticate_third_party = 2;

  string email = 3;

  string regis_username = 4;

  string password = 5;

  string name = 6;

  string avatar = 7;

  EnumSystemRole.SystemRole system_role = 8;

  EnumUserStatus.UserStatus user_status = 9;

  // @gotags: gorm:"autoUpdateTime:nano"
  int64 updated_at = 100;

  // @gotags: gorm:"autoCreateTime:nano"
  int64 created_at = 101;

  uint64 created_by_id = 102;

  uint64 updated_by_id = 103;

  uint64 owned_by_id = 104;
}
