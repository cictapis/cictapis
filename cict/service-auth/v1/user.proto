syntax = "proto3";

package cict.service_auth.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_auth/v1;service_auth";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/enum_mutate_operation.proto";
import "cict/common/v1/paginate.proto";
import "cict/service-auth/v1/enum_authenticate_third_party.proto";
import "cict/service-auth/v1/enum_system_role.proto";
import "cict/service-auth/v1/enum_user_status.proto";

service UserService {
  option (common.v1.service_name) = "users";

  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/user/login",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: ANONYMOUS,
    };
  }

  rpc Logout(LogoutRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/user/logout",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: AUTH,
    };
  }

  rpc MutateUser(MutateUserRequest) returns (MutateUserResponse) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/user/mutate",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: OWNER,
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/service_auth/v1/user/get"
    };
    option (common.v1.cict) = {
      crud_policy: AUTH,
      system_api_exporter: CICT_SERVICE_AUTH_USER_SERVICE_GET_USER,
    };
  }

  rpc ListUser(ListUserRequest) returns (ListUserResponse) {
    option (google.api.http) = {
      get: "/api/auth/v1/user/list"
    };
    option (common.v1.cict) = {
      crud_policy: ADMIN,
      system_api_exporter: CICT_SERVICE_AUTH_USER_SERVICE_LIST_USER,
    };
  }
}

message LoginRequest {
  string email = 1;

  string password = 2;

  string validate_password = 3;
}

message LoginResponse {
  User user = 1;

  string session_id = 2;
}

message LogoutRequest {
  string session_id = 1;
}

message MutateUserRequest {
  common.v1.EnumMutateOperation.MutateOperation mutate_operation = 1;

  repeated MutateUserOperation operations = 2;

  bool partial_failure = 3;

  google.protobuf.FieldMask update_mask = 4;
}

message MutateUserOperation {
  User user = 1;
}

message MutateUserResponse {
  repeated uint64 mutated_ids = 1;
}

message GetUserRequest {
  uint64 id = 1;
}

message GetUserResponse {
  User user = 1;
}

message ListUserRequest {
  common.v1.PaginateRequest paginate = 1;
}

message ListUserResponse {
  common.v1.PaginateResponse paginate = 1;

  repeated User users = 2;
}

message User {
  // @gotags: json:"id" gorm:"column:id;primary_key"
  uint64 id = 1;

  // @gotags: json:"authenticate_third_party" gorm:"column:authenticate_third_party;<-"
  EnumAuthenticateThirdParty.AuthenticateThirdParty authenticate_third_party = 2;

  // allow read and write
  //
  // @gotags: json:"gmail_organization" gorm:"column:gmail_organization;<-"
  string gmail_organization = 3;

  // @gotags: json:"regis_username" gorm:"column:regis_username;<-"
  string regis_username = 4;

  // @gotags: json:"regis_password" gorm:"column:regis_password;<-"
  string regis_password = 5;

  // allow read and write
  //
  // @gotags: json:"name" gorm:"column:name;<-"
  string name = 6;

  // allow read and write
  //
  // @gotags: json:"avatar" gorm:"column:avatar;<-"
  string avatar = 7;

  // allow read and write
  //
  // @gotags: json:"system_role,omitempty" gorm:"column:system_role;<-"
  EnumSystemRole.SystemRole system_role = 8;

  // @gotags: json:"user_status,omitempty" gorm:"column:user_status;<-"
  EnumUserStatus.UserStatus user_status = 9;

  // @gotags: json:"updated_at" gorm:"column:updated_at;autoUpdateTime:nano"
  int64 updated_at = 100;

  // @gotags: json:"created_at" gorm:"column:created_at;autoCreateTime:nano"
  int64 created_at = 101;

  // @gotags: json:"created_by_id" gorm:"column:created_by_id;<-:create"
  uint64 created_by_id = 102;

  // @gotags: json:"updated_by_id" gorm:"column:updated_by_id;<-:create"
  uint64 updated_by_id = 103;

  // @gotags: json:"owned_by_id" gorm:"column:owned_by_id;<-:create"
  uint64 owned_by_id = 104;
}
