syntax = "proto3";

package cict.service_auth.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_auth/v1;service_auth";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

import "cict/common/v1/annotations.proto";
import "cict/service-auth/v1/user.proto";
import "cict/service-auth/v1/license_scope.proto";

service OrganizationAccessorService {
  rpc MutateOrganizationAccessor(MutateOrganizationAccessorRequest) returns (MutateOrganizationAccessorResponse) {
    option (google.api.http) = {
      post: "/api/service_auth/v1/organization_accessor/mutate",
      body: "*"
    };
    option (common.v1.cict) = {
      crudPolicy: ADMIN,
    };
  }

  rpc GetOrganizationAccessor(GetOrganizationAccessorRequest) returns (GetOrganizationAccessorResponse) {
    option (google.api.http) = {
      get: "/api/service_auth/v1/organization_accessor/get",
    };
    option (common.v1.cict) = {
      crudPolicy: OWNER,
      systemApiExporter: CICT_SERVICE_AUTH_ORGANIZATION_ACCESSOR_SERVICE_GET_ORGANIZATION_ACCESSOR,
    };
  }

  rpc ListOrganizationAccessor(ListOrganizationAccessorRequest) returns (ListOrganizationAccessorResponse) {
    option (google.api.http) = {
      get: "/api/service_auth/v1/organization_accessor/list",
    };
    option (common.v1.cict) = {
      crudPolicy: ADMIN,
      systemApiExporter: CICT_SERVICE_AUTH_ORGANIZATION_ACCESSOR_SERVICE_LIST_ORGANIZATION_ACCESSOR,
    };
  }
}

message OrganizationAccessor {
  // @gotags: json:"id" gorm:"primaryKey"
  uint64 id = 1;

  // @gotags: json:"license" gorm:"<-"
  string license = 2;

  // @gotags: json:"expireAt" gorm:"<-"
  string expiredAt = 4;

  // @gotags: json:"licenseScopes"
  repeated LicenseScope licenseScopes = 5;

  // @gotags: json:"belongToId"
  uint64 belongToId = 6;

  // @gotags: json:"user" gorm:"foreignKey:belongToId"
  User belongTo = 7;

  // @gotags: json:"organizationName" gorm:"<-"
  string organizationName = 8;

  // @gotags: json:"updatedAt" gorm:"autoUpdateTime:nano"
  int64 updatedAt = 100;

  // @gotags: json:"createdAt" gorm:"autoCreateTime:nano"
  int64 createdAt = 101;

  // @gotags: json:"createdById"
  uint64 createdById = 102;

  // @gotags: json:"createdBy" gorm:"foreignkey:createdById"
  User createdBy = 103;

  // @gotags: json:"updatedById"
  uint64 updatedById = 104;

  // @gotags: json:"updatedBy" gorm:"foreignkey:updatedById"
  User updatedBy = 105;

  // @gotags: json:"ownedById"
  uint64 ownedById = 106;

  // @gotags: json:"ownedBy" gorm:"foreignkey:ownedById"
  User ownedBy = 107;
}
