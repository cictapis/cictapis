syntax = "proto3";

package cict.common.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/common/v1;common";
option java_multiple_files = false;
option java_outer_classname = "ConfigProto";
option java_package = "com.github.cictapis.cict_reporter.cict.common.v1";

message Config {
  Monitoring monitoring = 1;

  Services services = 2;

  Database database = 3;

  Redis redis = 4;

  Google google = 5;

  Kafka kafka = 6;

  Smtp smtp = 7;

  Const const = 8;
}

message Endpoint {
  string address = 1;

  int32 port = 2;
}

message Monitoring {
  Endpoint telemetry_endpoint = 1;

  Endpoint jaeger_endpoint = 2;
}

message Services {
  Endpoint service_auth_endpoint = 1;

  Endpoint service_course_endpoint = 2;

  Endpoint service_file_uploader_endpoint = 3;

  Endpoint service_gateway_endpoint = 4;

  Endpoint service_mail_endpoint = 5;

  Endpoint service_notification_endpoint = 6;

  Endpoint service_reporter_endpoint = 7;

  Endpoint service_listener_endpoint = 8;
}

message Database {
  enum Kind {
    MYSQL = 0;

    MONGODB = 1;

    POSTGRES = 2;

    MARIADB = 3;
  }

  enum Adapter {
    MINDSDB = 0;
  }

  Kind kind = 1;

  Adapter adapter = 2;

  Endpoint endpoint = 3;

  string username = 4;

  string password = 5;

  string database = 6;

  bool migrate = 7;
}

message Redis {
  Endpoint endpoint = 1;

  string password = 3;

  int32 database = 4;

  int32 session_timeout = 8;
}

message Google {
  message ServiceAccount {
    string type = 1;

    string project_id = 2;

    string private_key_id = 3;

    string private_key = 4;

    string client_email = 5;

    string client_id = 6;

    string auth_uri = 7;

    string token_uri = 8;

    string auth_provider_x509_cert_url = 9;

    string client_x509_cert_url = 10;
  }

  message Oauth {
    message Credentials {
      string client_id = 1;

      string project_id = 2;

      string auth_uri = 3;

      string token_uri = 4;

      string auth_provider_x509_cert_url = 5;

      string client_secret = 6;

      repeated string javascript_origins = 7;

      repeated string redirect_uris = 8;
    }

    Credentials web = 1;

    Credentials installed = 2;
  }

  message Drive {
    string root_dir_id = 1;
  }

  ServiceAccount service_account = 1;

  Oauth oauth = 2;

  Drive drive = 3;
}

message Kafka {
  message Topics {
    message Topic {
      string topic_name = 1;

      int32 partitions = 2;

      int32 replication_factor = 3;
    }

    Topic user_mutate = 1;

    Topic mail_send = 2;
  }

  repeated string brokers = 1;

  string group_id = 2;

  bool init_topic = 3;

  int32 max_pool_size = 4;

  Topics topics = 5;
}

message Smtp {
  Endpoint endpoint = 1;

  string username = 2;

  string password = 3;
}

message Const {
  string session_id = 1;

  string locale = 2;

  string propagation_cache = 3;

  string user = 4;

  string workspace_id = 5;
}
