syntax = "proto3";

package cict.service_academic.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_academic/v1;service_academic";
option java_multiple_files = false;
option java_outer_classname = "CategoryProto";
option java_package = "com.github.cictapis.cict_reporter.cict.serviceacademic.v1";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/enum_mask_behavior.proto";
import "cict/common/v1/paginate.proto";
import "cict/service-academic/v1/enum_category_type.proto";
import "cict/service-academic/v1/acronym.proto";
import "cict/service-academic/v1/campus.proto";
import "cict/service-academic/v1/faculty.proto";
import "cict/service-academic/v1/major.proto";
import "cict/service-academic/v1/type_of_education.proto";

service CategoryService {
  rpc MutateCategory (MutateCategoryRequest) returns (MutateCategoryResponse) {
    option (google.api.http) = {
      post: "/api/service_academic/v1/category/mutate",
      body: "*",
    };
    option (common.v1.cict) = {
      crud_policy: SCOPE_ADMIN,
    };
  }

  rpc GetCategory (GetCategoryRequest) returns (GetCategoryResponse) {
    option (google.api.http) = {
      get: "/api/service_academic/v1/category/get",
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
    };
  }

  rpc ListCategory (ListCategoryRequest) returns (ListCategoryResponse) {
    option (google.api.http) = {
      get: "/api/service_academic/v1/category/list",
    };
    option (common.v1.cict) = {
      crud_policy: ANYONE,
    };
  };
}

message MutateCategoryRequest {
  // inconsistant category input will halt errors.
  EnumCategoryType.CategoryType category_type = 1;

  MutateCategoryCreate create = 2;

  MutateCategoryUpdate update = 3;

  MutateCategoryDelete delete = 4;

  bool partial_failure = 5;
}

message MutateCategoryCreate {
  option (common.v1.default_mask) = {
    paths: ["code","name"],
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  repeated CategoryOneof category = 1;
}

message MutateCategoryUpdate {
  option (common.v1.default_mask) = {
    paths: ["code","name"],
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  repeated string ids = 3;

  CategoryOneof category = 4;
}

message MutateCategoryDelete {
  repeated string ids = 1;
}

message MutateCategoryResponse {
  string affected_rows = 1;
}

message GetCategoryRequest {
  option (common.v1.default_mask) = {
    paths: ["id","code","name"],
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  EnumCategoryType.CategoryType category_type = 3;

  string id = 4;
}

message GetCategoryResponse {
  CategoryOneof category = 1;
}

message ListCategoryRequest {
  option (common.v1.default_mask) = {
    paths: ["id","code","name"],
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  EnumCategoryType.CategoryType category_type = 3;

  common.v1.Paginate paginate = 4;
}

message ListCategoryResponse {
  repeated CategoryOneof categories = 1;
}

message CategoryOneof {
  oneof category {
    Acronym acronym = 1;

    Campus basis = 2;

    Faculty faculty = 3;

    Major major = 4;

    TypeOfEducation type_of_education = 5;
  }
}
