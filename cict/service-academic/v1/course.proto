syntax = "proto3";

package cict.service_academic.v1;

option cc_enable_arenas = true;
option go_package = "github.com/cictapis/cict-auth/cict/service_academic/v1;service_academic";
option java_multiple_files = false;
option java_outer_classname = "CourseProto";
option java_package = "com.github.cictapis.cict_reporter.cict.serviceacademic.v1";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "cict/common/v1/annotations.proto";
import "cict/common/v1/enum_mask_behavior.proto";
import "cict/common/v1/paginate.proto";
import "cict/service-academic/v1/campus.proto";
import "cict/service-academic/v1/class.proto";
import "cict/service-academic/v1/enum_course_status.proto";
import "cict/service-academic/v1/enum_study_period.proto";
import "cict/service-academic/v1/major.proto";
import "cict/service-academic/v1/semester.proto";
import "cict/service-academic/v1/staff.proto";
import "cict/service-academic/v1/subject.proto";
import "cict/service-academic/v1/type_of_education.proto";

service CourseService {
  rpc MutateCourse(MutateCourseRequest) returns (MutateCourseResponse) {
    option (google.api.http) = {
      post: "/api/service_academic/v1/course/mutate",
      body: "*"
    };
    option (common.v1.cict) = {
      crud_policy: SCOPE_ADMIN,
    };
  }

  rpc GetCourse(GetCourseRequest) returns (GetCourseResponse) {
    option (google.api.http) = {
      get: "/api/service_academic/v1/course/get",
    };
    option (common.v1.cict) = {
      crud_policy: WORKSPACE_ISOLATION,
    };
  }

  rpc ListCourse(ListCourseRequest) returns (ListCourseResponse) {
    option (google.api.http) = {
      get: "/api/service_academic/v1/course/list",
    };
    option (common.v1.cict) = {
      crud_policy: SCOPE_ADMIN,
    };
  }

  // Search opening course
  rpc SearchCourse(SearchCourseRequest) returns (SearchCourseResponse) {
    option (google.api.http) = {
      get: "/api/service_academic/v1/course/search",
    };
    option (common.v1.cict) = {
      crud_policy: SCOPE_USER,
    };
  }
}

message MutateCourseRequest {
  MutateCourseCreate create = 1;

  MutateCourseUpdate update = 2;

  MutateCourseDelete delete = 3;

  bool partial_failure = 4;
}

message MutateCourseCreate {
  option (common.v1.default_mask) = {
    paths: ["semester_id","subject_id","class_id","lecturer_id","group","date","class_start","num_of_classes","room_code","study_period","campus_id","week_of_study","course_status","major_id","type_of_education_id","capacity","size"]
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  repeated Course courses = 3;
}

message MutateCourseUpdate {
  option (common.v1.default_mask) = {
    paths: ["semester_id","subject_id","class_id","lecturer_id","group","date","class_start","num_of_classes","room_code","study_period","campus_id","week_of_study","course_status","major_id","type_of_education_id","capacity","size"]
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  Course course = 3;

  repeated string ids = 4;
}

message MutateCourseDelete {
  repeated string ids = 1;
}

message MutateCourseResponse {
  int64 affected_rows = 1;
}

message GetCourseRequest {
  option (common.v1.default_mask) = {
    paths: ["id","semester_id","subject_id","class_id","lecturer_id","group","date","class_start","num_of_classes","room_code","study_period","campus_id","week_of_study","course_status","major_id","type_of_education_id","capacity","size"]
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  string id = 3;
}

message GetCourseResponse {
  Course course = 1;
}

message ListCourseRequest {
  option (common.v1.default_mask) = {
    paths: ["id","semester_id","subject_id","class_id","lecturer_id","group","date","class_start","num_of_classes","room_code","study_period","campus_id","week_of_study","course_status","major_id","type_of_education_id","capacity","size"]
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  common.v1.Paginate paginate = 3;

  string semester_id = 4;

  string subject_id = 5;

  string class_id = 6;

  string lecturer_id = 7;

  string campus_id = 8;

  string type_of_education_id = 9;
}

message ListCourseResponse {
  repeated Course courses = 1;
}

message SearchCourseRequest {
  option (common.v1.default_mask) = {
    paths: ["id","semester_id","subject_id","class_id","lecturer_id","group","date","class_start","num_of_classes","room_code","study_period","campus_id","week_of_study","course_status","major_id","type_of_education_id","capacity","size"]
  };

  common.v1.EnumMaskBehavior.MaskBehavior mask_behavior = 1;

  google.protobuf.FieldMask mask = 2;

  common.v1.Paginate paginate = 3;

  string semester_id = 4;

  string subject_id = 5;

  string class_id = 6;

  string lecturer_id = 7;

  string campus_id = 8;

  string type_of_education_id = 9;
}

message SearchCourseResponse {
  repeated Course courses = 1;
}

// Học phần, NhomHocPhanGV, ToDKKH
message Course {
  // Id not primary key.
  // @gotags: gorm:"not null;unique;type:varchar(36);default:(uuid())"
  string id = 1;

  // NHHK
  // @gotags: gorm:"primaryKey;type:varchar(6)"
  string semester_id = 2;

  // @gotags: gorm:"constraint:OnUpdate:CASCADE,OneDelete:SET NULL"
  Semester semester = 3;

  // MaMH
  // @gotags: gorm:"primaryKey;type:varchar(50)"
  string subject_id = 4;

  // @gotags: gorm:"constraint:OnUpdate:CASCADE,OnDelete:CASCADE"
  Subject subject = 5;

  // Lop
  // @gotags: gorm:"primaryKey;type:varchar(50)"
  string class_id = 6;

  // @gotags: gorm:"constraint:OnUpdate:CASCADE,OnDelete:CASCADE"
  Class class = 7;

  // MaCB
  // @gotags: gorm:"primaryKey;type:varchar(50)"
  string lecturer_id = 8;

  // @gotags: gorm:"constraint:OnUpdate:CASCADE,OnDelete:CASCADE"
  Staff lecturer = 9;

  // Nhom
  // @gotags: gorm:"primaryKey;type:varchar(5)"
  string group = 10;

  // Thu
  // Date in week represent by a number from 2 to 8 means Monday to Sunday
  uint32 date = 11;

  // TietBD
  uint32 class_start = 12;

  // SoTiet
  uint32 num_of_classes = 13;

  // MaPH
  // @gotags: gorm:"type:varchar(10)"
  string room_code = 14;

  // Buoi hoc
  EnumStudyPeriod.StudyPeriod study_period = 15;

  // MaCS
  // @gotags: gorm:"type:varchar(50)"
  string campus_id = 16;

  // @gotags: gorm:"constraint:OnUpdate:CASCADE,OnDelete:SET NULL"
  Campus campus = 17;

  // TuanHoc
  // @gotags: gorm:"type:varchar(100)"
  string week_of_study = 18;

  // Status
  EnumCourseStatus.CourseStatus course_status = 19;

  // @gotags: gorm:"type:varchar(50);"
  string major_id = 20;

  // @gotags: gorm:"constraint:OnUpdate:CASCADE,OnDelete:SET NULL"
  Major major = 21;

  // @gotags: gorm:"type:varchar(50);"
  string type_of_education_id = 22;

  // @gotags: gorm:"constraint:OnUpdate:CASCADE,OnDelete:SET NULL"
  TypeOfEducation type_of_education = 23;

  uint32 capacity = 24;

  uint32 size = 25;

  // @gotags: gorm:"autoUpdateTime:nano"
  int64 updated_at = 100;

  // @gotags: gorm:"autoCreateTime:nano"
  int64 created_at = 101;

  // @gotags: gorm:"type:varchar(36)"
  string created_by_id = 102;

  // @gotags: gorm:"type:varchar(36)"
  string updated_by_id = 103;

  // @gotags: gorm:"type:varchar(36)"
  string owned_by_id = 104;

  // @gotags: gorm:"type:varchar(36)"
  string workspace_id = 105;
}
